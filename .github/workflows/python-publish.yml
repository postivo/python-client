# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [created]

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install poetry
      run: |
        curl -sSL https://install.python-poetry.org | POETRY_VERSION=2.1.0 python3 -
        poetry --version
    - name: Check for publish.sh
      id: check-publish
      run: |
        if [ -f scripts/publish.sh ]; then
          echo "publish_with_script=true" >> $GITHUB_OUTPUT
        fi
    - name: Publish with script
      if: steps.check-publish.outputs.publish_with_script == 'true'
      env:
        PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
      run: |
        chmod +x ./scripts/publish.sh
        ./scripts/publish.sh
    - name: Legacy publish
      if: steps.check-publish.outputs.publish_with_script != 'true'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        python setup.py sdist bdist_wheel
        twine upload dist/*
